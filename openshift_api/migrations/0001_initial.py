# Generated by Django 2.1.2 on 2018-12-31 13:40

import common.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ansible_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ansible_api.Project')),
                ('status', models.CharField(blank=True, max_length=20, null=True, verbose_name='Status')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Create time')),
            ],
            bases=('ansible_api.project',),
        ),
        migrations.CreateModel(
            name='DeployExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('timedelta', models.FloatField(default=0.0, null=True, verbose_name='Time')),
                ('state', models.CharField(choices=[('PENDING', 'Pending'), ('STARTED', 'Started'), ('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('RETRY', 'Retry')], default='PENDING', max_length=16)),
                ('num', models.IntegerField(default=1)),
                ('result_summary', common.models.JsonDictTextField(blank=True, default={}, null=True, verbose_name='Result summary')),
                ('result_raw', common.models.JsonDictTextField(blank=True, default={}, null=True, verbose_name='Result raw')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Create time')),
                ('date_start', models.DateTimeField(null=True, verbose_name='Start time')),
                ('date_end', models.DateTimeField(null=True, verbose_name='End time')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openshift_api.Cluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('host_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ansible_api.Host')),
                ('status', models.CharField(blank=True, max_length=20, null=True, verbose_name='Status')),
            ],
            options={
                'abstract': False,
            },
            bases=('ansible_api.host',),
        ),
        migrations.CreateModel(
            name='Offline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('path', models.FilePathField(max_length=1000, verbose_name='Path')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='Remark')),
                ('is_active', models.BooleanField(default='1', verbose_name='Is Active')),
                ('content_yml', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Create time')),
            ],
            options={
                'verbose_name': '离线包',
                'verbose_name_plural': '离线包',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ansible_api.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('ansible_api.group',),
        ),
        migrations.AddField(
            model_name='cluster',
            name='offline',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clusters', to='openshift_api.Offline'),
        ),
    ]
